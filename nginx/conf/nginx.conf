worker_processes 2;

# for docker
daemon off;

events {
  worker_connections 1024;
}

# define server real addr
env FRONT_PORT_80_TCP_ADDR;
env BACK_PORT_80_TCP_ADDR;
env PMA_PORT_80_TCP_ADDR;
env BLOG_PORT_80_TCP_ADDR;

http {
  access_log /var/log/nginx-access.log combined;

  lua_shared_dict locks 1M;
  lua_shared_dict cache 10M;

  # see https://github.com/openresty/lua-resty-core
  init_by_lua '
    require "resty.core"
  ';

  server {
    listen 80;
    listen [::]:80;
     
    location /.well-known/acme-challenge/ {
      alias /var/www/challenges/;
      try_files $uri =404;
    }
    
    location / {
	    return 301 https://$host$request_uri;
	  }
  }

  server {
    listen 80;
    server_name ~^www\..+\.tk$;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("FRONT_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
  
  server {
    listen 80;
    server_name ~^api\..+\.tk$;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("BACK_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
  
  server {
    listen 80;
    server_name ~^phpmyadmin\..+\.tk$;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("PMA_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
  
  server {
    listen 80;
    server_name ~^blog\..+\.tk$;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("BLOG_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
}
