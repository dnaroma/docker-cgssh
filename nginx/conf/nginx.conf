worker_processes 2;

events {
  worker_connections 1024;
}

# define server real addr
env FRONT_PORT_80_TCP_ADDR;
env BACK_PORT_8000_TCP_ADDR;
env CI_PORT_8080_TCP_ADDR;
env PMA_PORT_80_TCP_ADDR;
env BLOG_PORT_80_TCP_ADDR;

http {
  access_log /var/log/nginx-access.log combined;

  lua_shared_dict locks 1M;
  lua_shared_dict cache 10M;

  # see https://github.com/openresty/lua-resty-core
  init_by_lua '
    require "resty.core"
  ';
  
  gzip on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css image/png image/gif image/jpeg application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
  proxy_temp_path   /var/nginx 1 2;
  
  #keys_zone=cache1:100m 表示这个zone名称为cache1，分配的内存大小为100MB
  #/usr/local/nginx/proxy_cache_dir/cache1 表示cache1这个zone的文件要存放的目录
  #levels=1:2 表示缓存目录的第一级目录是1个字符，第二级目录是2个字符，即/usr/local/nginx/proxy_cache_dir/cache1/a/1b这种形式
  #inactive=1d 表示这个zone中的缓存文件如果在1天内都没有被访问，那么文件会被cache manager进程删除掉
  #max_size=10g 表示这个zone的硬盘容量为10GB

  proxy_cache_path  /var/nginx/cache1  levels=1:2 keys_zone=cache1:100m inactive=1d max_size=10g;
  
  server {
    listen 80;
    server_name ~^www\..+\.tk$ ~^api\..+\.tk$;
    
    rewrite ^(.*)$  https://$host$1 permanent;
  }

  server {
    listen 443;
    server_name ~^www\..+\.tk$;
    
    ssl on;
    ssl_certificate /var/www/challenges/chained.pem;
    ssl_certificate_key /var/www/challenges/domain.key;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
    ssl_session_cache shared:SSL:50m;
    ssl_dhparam /var/www/challenges/server.dhparam;
    ssl_prefer_server_ciphers on;
    
    location / {		
      set_by_lua  $passaddr  'return "http://"..os.getenv("FRONT_PORT_80_TCP_ADDR")';		
      proxy_pass  $passaddr;		
      proxy_set_header  HOST  $host;		
      proxy_set_header  X-Real-IP  $remote_addr;		
      proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
      #设置资源缓存的zone
      proxy_cache cache1;
      #设置缓存的key
      proxy_cache_key $host$uri$is_args$args;
      #设置状态码为200和304的响应可以进行缓存，并且缓存时间为10分钟
      proxy_cache_valid 200 304 10m;
      
      expires 30d;
     }
  }
  
  server {
    listen 443;
    server_name ~^api\..+\.tk$;
    
    ssl on;
    ssl_certificate /var/www/challenges/chained.pem;
    ssl_certificate_key /var/www/challenges/domain.key;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
    ssl_session_cache shared:SSL:50m;
    ssl_dhparam /var/www/challenges/server.dhparam;
    ssl_prefer_server_ciphers on;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("BACK_PORT_8000_TCP_ADDR")..":8000"';		
       proxy_pass  $passaddr;		
       proxy_pass_header Authorization;
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
  
  server {
    listen 80;
    server_name ~^phpmyadmin\..+\.tk$;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("PMA_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
  
  server {
    listen 80;
    server_name ~^blog\..+\.tk$;
    
    location / {		
      set_by_lua  $passaddr  'return "http://"..os.getenv("BLOG_PORT_80_TCP_ADDR")';		
      proxy_pass  $passaddr;		
      proxy_set_header  HOST  $host;		
      proxy_set_header  X-Real-IP  $remote_addr;		
      proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
       
      #设置资源缓存的zone
      proxy_cache cache1;
      #设置缓存的key
      proxy_cache_key $host$uri$is_args$args;
      #设置状态码为200和304的响应可以进行缓存，并且缓存时间为10分钟
      proxy_cache_valid 200 304 10m;
      
      expires 30d;
     }
  }
  
  server {
    listen 80;
    server_name ~^ci\..+\.tk$;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("CI_PORT_8080_TCP_ADDR")..":8080"';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
}
