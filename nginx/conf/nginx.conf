worker_processes 2;

events {
  worker_connections 1024;
}

env FRONT_PORT_80_TCP_ADDR;
env PMA_DOMAIN;
env FRONT_DOMAIN;
env BACK_DOMAIN;
env BLOG_DOMAIN;

http {
  access_log off;

  lua_shared_dict locks 1M;
  lua_shared_dict cache 10M;

  # see https://github.com/openresty/lua-resty-core
  init_by_lua '
    require "resty.core"
  ';

  server {
    listen 80;
    set_by_lua  $front  'return os.getenv("FRONT_DOMAIN")';	
    server_name $front;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("FRONT_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
  
  server {
    listen 80;
    set_by_lua  $back  'return os.getenv("BACK_DOMAIN")';	
    server_name $back;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("BACK_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
  
  server {
    listen 80;
    set_by_lua  $pma  'return os.getenv("PMA_DOMAIN")';	
    server_name $pma;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("PMA_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
  
  server {
    listen 80;
    set_by_lua  $blog  'return os.getenv("BLOG_DOMAIN")';	
    server_name $blog;
    
    location / {		
       set_by_lua  $passaddr  'return "http://"..os.getenv("BLOG_PORT_80_TCP_ADDR")';		
       proxy_pass  $passaddr;		
       proxy_set_header  HOST  $host;		
       proxy_set_header  X-Real-IP  $remote_addr;		
       proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;		
     }
  }
}
